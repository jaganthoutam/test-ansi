---
  - name: Playbook
    hosts: webserver
    become: yes
    become_user: root
    tasks:
      - name: get service facts
        service_facts:

      - name: try to work out how to access the service
        debug:
          var: ansible_facts.services["nginx.service"]
          
          
      - name: Check Mysql
        shell: systemctl status mysqld.service | grep Active | awk -v N=2 '{print $N}'
        register: output

      - name: Stop musql
        service:
          name: mysqld
          state: stopped
        when: output.stdout == 'active'     

      - name: Check nginx
        shell: systemctl status nginx.service | grep Active | awk -v N=2 '{print $N}'
        register: output

      - name: Stop nginx
        service:
          name: nginx
          state: stopped
        when: output.stdout == 'active'
        
      - name: Install nginx
        yum:
          name: nginx
          state: present
        
      - name: Insert Index Page
        template:
          src: index.html
          dest: /usr/share/nginx/html/index.html
          
      -  name: Sleep for 60 seconds and timeout
         tags: sleep60
         wait_for:
           delay: 30
           timeout: 0

      - name: Start NGiNX
        service:
          name: nginx
          state: started

      - name: Start MySQL
        service:
          name: mysqld
          state: started
      
      - name: Enable service nginx, and not touch the state
        service:
          name: mysqld
          enabled: yes
      
      - name: Enable service nginx, and not touch the state
        service:
          name: nginx
          enabled: yes
          
          
      - name: Replace a localhost entry with our own
        lineinfile:
          path: /etc/hosts
          regexp: '^127\.0\.0\.1'
          line: 127.0.0.1 localhost
          owner: root
          group: root
          mode: '0644'
          
          
#### Add users to sudo and add pub key 
      - name: Make sure we have a 'wheel' group
        group:
          name: wheel
          state: present

      - name: Validate the sudoers file before saving
        lineinfile:
          path: /etc/sudoers
          state: present
          regexp: '^%ADMIN ALL='
          line: '%ADMIN ALL=(ALL) NOPASSWD: ALL'
          validate: /usr/sbin/visudo -cf %s

      - name: Add sudoers users to wheel group
        user: name=deployer groups=wheel append=yes state=present createhome=yes

      - name: Set authorized key taken from file
        authorized_key:
          user: deployer
          state: present
          key: "{{ lookup('file', '/home/charlie/.ssh/id_rsa.pub') }}"
